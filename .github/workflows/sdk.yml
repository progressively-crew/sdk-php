name: Example SDK Php
on:
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  static:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: progressively
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Log
        run: ls && pwd
      - name: Clone  repo
        run: ls &&  git init && git remote add origin "https://github.com/progressively-crew/progressively.git" && git fetch && git checkout -t origin/master -f
      - name: Move SDK in test folder
        run: mkdir -p ./example/php/sdk && ls && pwd &&  cp -r ./src/ ./example/php/sdk/
      - name: Move SDK composer file in test folder
        run: mv ./composer.json ./example/php/sdk/composer.json
      - name: New config file for local project
        run: mv ./composer-test.json ./example/php/composer.json

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            example/php/package-lock.json
            packages/backend/package-lock.json
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"

      - name: Creating .env files
        run: mv ./packages/backend/.env.example ./packages/backend/.env

      - name: Install the cypress-helpers dependencies
        working-directory: ./example/cypress-helpers
        run: npm install

      - name: Install SDK dependencies on the example project
        working-directory: ./example/php/sdk
        run: npm install && composer install
      - name: Install dependencies on the example project
        working-directory: ./example/php
        run: npm install && composer install

      - name: Bootstrap projects
        run: npm run setup:ci

      - name: Prepare the DB
        run: npm run db:prepare

      - name: Build
        run: npm run build

      - name: Start the backend project
        working-directory: ./packages/backend
        run: npm start &

      - name: Start the Example PHP project
        working-directory: ./example/php
        run: php -S localhost:3000 &

      - name: E2E tests
        working-directory: ./example/php
        run: npx wait-on -t 60000 tcp:4000 && npm run test:e2e:ci
